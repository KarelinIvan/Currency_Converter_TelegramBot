import telebot
from currency_converter import CurrencyConverter
from telebot import types

from settings import TELEGRAM_TOKEN

conversion = CurrencyConverter()

converter_bot = telebot.TeleBot(TELEGRAM_TOKEN)

amount = 0


@converter_bot.message_handler(commands=["start"])
def start(message):
    """ –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    hello = (f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!üëã\n"
             f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    converter_bot.send_message(message.chat.id, hello)
    converter_bot.register_next_step_handler(message, conversion_amount)


def conversion_amount(message):
    """ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å """
    global amount
    try:
        amount = int(message.text.strip())
    except ValueError:
        info_message_2 = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É!"
        converter_bot.send_message(message.chat.id, info_message_2)
        converter_bot.register_next_step_handler(message, conversion_amount)
        return

    if amount > 0:
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("RUB/USD", callback_data="rub/usd")
        btn2 = types.InlineKeyboardButton("RUB/EUR", callback_data="rub/eur")
        btn3 = types.InlineKeyboardButton("–î—Ä—É–≥–∞—è –≤–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞", callback_data="else")
        markup.add(btn1, btn2, btn3)
        info_message = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é"
        converter_bot.send_message(message.chat.id, info_message, reply_markup=markup)
    else:
        info_message_3 = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω–æ–ª—è!"
        converter_bot.send_message(message.chat.id, info_message_3)
        converter_bot.register_next_step_handler(message, conversion_amount)


@converter_bot.callback_query_handler(func=lambda call: True)
def callback(call):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç """
    values = call.data.upper().split("/")
    result = conversion.convert(amount, values[0], values[1])
    info_message_3 = (f"–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –∫—É—Ä—Å –ø–∞—Ä—ã {values[0]} –∫ {values[1]},\n"
                      f"{amount} {values[0]} = {round(result, 2)} {values[1]}\n"
                      f"–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    converter_bot.send_message(call.message.chat.id, info_message_3)
    converter_bot.register_next_step_handler(call.message, conversion_amount)


converter_bot.polling(none_stop=True)
